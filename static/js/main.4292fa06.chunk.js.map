{"version":3,"sources":["components/navigation/navigation.tsx","components/layout/layout.tsx","tools/tools.ts","tools/debounce.js","hooks/use-limits.ts","components/loading-spinner/loading-spinner.tsx","components/apod/apod-item/apod-item.tsx","components/apod/apod.tsx","components/donki/donki-form/donki-form.tsx","components/donki/donki-item/donki-item.tsx","components/donki/donki.tsx","components/searchbar/search-bar.tsx","components/epic/epic.tsx","components/home/home.tsx","hooks/use-home.ts","components/rover/rover-form/rover-form.tsx","components/rover/rover-item/rover-item.tsx","components/rover/rover.tsx","components/techport/techport.tsx","hooks/use-techport.ts","components/techtransfer/techtransfer-item/techtransfer-item.tsx","components/techtransfer/techtransfer.tsx","components/routing/routing.tsx","hooks/use-get-data.ts","hooks/use-techtransfer.ts","hooks/use-rover.ts","hooks/use-donki.ts","hooks/use-epic.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navigation","className","to","exact","Layout","props","children","fetchPost","path","data","fetch","method","headers","body","JSON","stringify","then","response","json","catch","error","console","log","getInitialInterval","currentTime","Date","getTime","yesterday","hundredDaysbeforeYesterdayDate","hundredDaysbeforeYesterdayDateObj","year","getFullYear","month","getMonth","day","getDate","yesterdayObj","Number","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","useLimits","initialState","scroll","useState","limitedState","setLimitedState","counter","setCounter","useEffect","filter","el","index","document","scrollTop","documentElement","length","initial","LoadingSpinner","ApodItem","element","title","hdurl","date","explanation","copyright","media_type","url","show","setShow","onClick","state","style","backgroundImage","width","height","margin","src","display","Apod","apod","handleScroll","window","onscroll","id","map","DonkiForm","startDate","endDate","maxDate","handleChange","handleSubmit","onSubmit","e","type","value","max","min","onChange","DonkiItem","news","message","messageBody","split","header","summary","messageID","messageType","messageIssueTime","href","messageURL","Donki","donki","Searchbar","placeholder","Epic","currentEpic","handlePrevClick","handleNextClick","results","handleClickResult","dateArr","images","i","Image","image","preload","result","coords","attitude_quaternions","q0","q1","q2","q3","centroid_coordinates","lat","lon","dscovr_j2000_position","x","y","z","lunar_j2000_position","sun_j2000_position","Home","techport","setResults","projects","searchValue","target","trim","existingProjects","project","String","indexOf","useHome","RoverForm","handleClick","handleInput","setMessage","name","step","RoverItem","foto","img_src","earth_date","rover","camera","full_name","landing_date","launch_date","Rover","roverData","isClicked","Techport","techportResult","setTechportResult","resData","useTechPort","useParams","projectId","regEx","RegExp","description","join","website","TechtransferItem","Techtransfer","Routing","setApod","epic","setEpic","epicAll","setEpicAll","setTechport","setState","useCallback","apiNames","forEach","res","getInitialData","useGetData","techtransfer","setTechtransfer","setError","searchfield","useTechTransfer","handleChangeTechtransfer","photos","setRoverData","sol","setSol","setName","setIsClicked","field","includes","useRover","isClickedRover","handleInputRover","handleClickRover","setDonki","setStartDate","setEndDate","newDate","maxDateArr","newDateArr","startingPoint","startingPointNr","preventDefault","startDateArr","endDateArr","tempDate","useDonki","handleChangeDonki","handleSubmitDonki","useInitialDonki","setIndex","setCurrentEpic","input","currentTarget","textContent","useEpic","indexEpic","messageEpic","handlePrevClickEpic","handleNextClickEpic","resultsEpic","handleChangeEpic","displayEpic","handleClickResultEpic","limitedApod","handleScrollApod","limitedTechTransfer","handleScrollTechtransfer","limitedTechRoverData","handleScrollRover","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4292fa06.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function Navigation(): ReactElement {\r\n  return (\r\n    <nav className=\"ui tabular menu\">\r\n      <NavLink to=\"/home\" className=\"item\">Home</NavLink>\r\n      <NavLink exact to=\"/apod\" className=\"item\">APOD</NavLink>\r\n      <NavLink exact to=\"/epic\" className=\"item\">EPIC</NavLink>\r\n      <NavLink exact to=\"/rover\" className=\"item\">ROVER</NavLink>\r\n      <NavLink exact to=\"/donki\" className=\"item\">DONKI</NavLink>\r\n      <NavLink exact to=\"/techtransfer\" className=\"item\">TECHTRANSFER</NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\n","import React, { ReactElement } from \"react\";\r\nimport Navigation from \"../navigation/navigation\";\r\n\r\ninterface Props {\r\n  children: ReactElement;\r\n}\r\n\r\nexport default function Layout(props: Props): ReactElement {\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n\r\n      <div className=\"ui container\">\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n// Fetching tools\r\nexport function fetchPost(path: string, data: any): Promise<any> {\r\n  return fetch(`https://nasa-agzu.herokuapp.com${path}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(data)\r\n  }).then(response => response.json()).catch(error => console.log(error))\r\n}\r\n\r\nexport function fetchGet(path: string): Promise<any> {\r\n  return fetch(path).then(response => response.json()).catch(error => console.log(error))\r\n}\r\n\r\n// Donki Datum initialisieren\r\nexport const getInitialInterval = (): string[] => {\r\n  //Gibt die Daten für die letzten 100 Tage seit gestern zurück\r\n  const currentDate = new Date();\r\n  const currentTime = currentDate.getTime();\r\n  const oneDay = (24 * 60 * 60 * 1000);\r\n  const yesterday = new Date(currentTime - oneDay);\r\n  const hundredDays = (100 * 24 * 60 * 60 * 1000);\r\n  const hundredDaysbeforeYesterdayDate = new Date(currentTime - hundredDays);\r\n\r\n  const hundredDaysbeforeYesterdayDateObj = {\r\n    year: `${hundredDaysbeforeYesterdayDate.getFullYear()}`,\r\n    month: `${hundredDaysbeforeYesterdayDate.getMonth()}`,\r\n    day: `${hundredDaysbeforeYesterdayDate.getDate()}`\r\n  };\r\n  const yesterdayObj = {\r\n    year: `${yesterday.getFullYear()}`,\r\n    month: `${yesterday.getMonth()}`,\r\n    day: `${yesterday.getDate()}`\r\n  };\r\n  //Daten formattieren\r\n  if (Number(yesterdayObj.month) < 10) yesterdayObj.month = `0${yesterdayObj.month}`;\r\n  if (Number(yesterdayObj.day) < 10) yesterdayObj.day = `0${yesterdayObj.day}`;\r\n  if (Number(hundredDaysbeforeYesterdayDateObj.month) < 10)\r\n    hundredDaysbeforeYesterdayDateObj.month = `0${hundredDaysbeforeYesterdayDateObj.month}`;\r\n  if (Number(hundredDaysbeforeYesterdayDateObj.day) < 10)\r\n    hundredDaysbeforeYesterdayDateObj.day = `0${hundredDaysbeforeYesterdayDateObj.day}`;\r\n\r\n  const yesterdayString = `${yesterdayObj.year}-${yesterdayObj.month}-${yesterdayObj.day}`;\r\n  const hundredDaysbeforeYesterdayDateString =\r\n    `${hundredDaysbeforeYesterdayDateObj.year}-${hundredDaysbeforeYesterdayDateObj.month}-${hundredDaysbeforeYesterdayDateObj.day}`;\r\n\r\n  return [yesterdayString, hundredDaysbeforeYesterdayDateString];\r\n}","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport default function debounce(func, wait, immediate) {\r\n  let timeout;\r\n\r\n  return function executedFunction() {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    let context = this;\r\n    let args = arguments;\r\n\r\n    let later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n\r\n    let callNow = immediate && !timeout;\r\n\r\n    clearTimeout(timeout);\r\n\r\n    timeout = setTimeout(later, wait);\r\n\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useLimits(initialState: any, scroll: number): [\r\n  limitedState: any[],\r\n  handleScroll: () => void\r\n] {\r\n  const [limitedState, setLimitedState] = useState<any[]>([]);\r\n  const [counter, setCounter] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (initialState) {\r\n      setLimitedState(initialState.filter((el: any, index: number) => index < 10));\r\n    }\r\n    setCounter(1);\r\n  }, [initialState])\r\n\r\n  const handleScroll = () => {\r\n    if ((document.body.scrollTop > counter * scroll || document.documentElement.scrollTop > counter * scroll)\r\n      && counter < initialState.length) {\r\n      setCounter(counter => counter + 1)\r\n      setLimitedState(initial => initialState.filter((el: any, index: number) => (index < counter * 10 && index < initialState.length - 1)));\r\n    }\r\n  }\r\n  return [\r\n    limitedState,\r\n    handleScroll\r\n  ];\r\n}\r\n","import React, { ReactElement } from \"react\";\r\n\r\nconst LoadingSpinner = (): ReactElement => (\r\n  <div className=\"ui container\">\r\n    <div className=\"ui active large text loader\">Loading</div>\r\n  </div>\r\n);\r\n\r\nexport default LoadingSpinner;","import React, { ReactElement, useState } from \"react\";\r\nimport { ApodType } from \"../../../types/types\";\r\n\r\ninterface Props {\r\n  element: ApodType;\r\n}\r\n\r\nexport default function ApodItem({ element }: Props): ReactElement {\r\n  const { title, hdurl, date, explanation, copyright, media_type, url } = element;\r\n  const [show, setShow] = useState(false);\r\n\r\n  const showElement = () => {\r\n    setShow(state => !state);\r\n  }\r\n\r\n  return (\r\n    <div className=\"column\">\r\n      <div className=\"ui fluid card\" onClick={showElement}>\r\n        <div className=\"image backgroundImageCard\" style={{ backgroundImage: `url(${url && hdurl})` }}>\r\n          {(media_type == \"video\") &&\r\n            <iframe\r\n              width=\"90%\" height=\"320\"\r\n              style={{ margin: \"15px 5%\" }}\r\n              src={url}></iframe>\r\n          }\r\n        </div>\r\n\r\n        <div className=\"content\" style={show ? { display: \"block\" } : { display: \"none\" }}>\r\n          <h1 className=\"header\">{title}</h1>\r\n          <div className=\"meta\">\r\n            <span className=\"date\">Date: {date}</span>\r\n          </div>\r\n          <p className=\"description\">{explanation}</p>\r\n        </div>\r\n\r\n        {copyright && <div className=\"extra content\">\r\n          <span>&copy; {copyright}</span>\r\n        </div>}\r\n      </div>\r\n    </div >\r\n  );\r\n}","import React, { ReactElement, useState } from \"react\";\r\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\r\nimport ApodItem from \"./apod-item/apod-item\";\r\nimport { ApodType } from \"../../types/types\";\r\n\r\ninterface Props {\r\n  apod: ApodType[];\r\n  handleScroll: () => void;\r\n}\r\n\r\nexport default function Apod({ apod, handleScroll }: Props): ReactElement {\r\n\r\n  window.onscroll = handleScroll;\r\n\r\n  return (\r\n    <div className=\"ui two column grid\" id=\"apod-component\">\r\n      {\r\n        apod.length ? apod.map((element: ApodType, index: number) => {\r\n          return (\r\n            <ApodItem element={element} key={index} />\r\n          )\r\n        }) : <LoadingSpinner />\r\n      }\r\n    </div>\r\n  );\r\n}","import React, { ReactElement } from \"react\";\r\n\r\ninterface Props {\r\n  startDate: string;\r\n  endDate: string;\r\n  maxDate: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport default function DonkiForm({ startDate, endDate, maxDate, handleChange, handleSubmit }: Props): ReactElement {\r\n  return (\r\n    <form className=\"ui form\" onSubmit={(e) => { handleSubmit(e) }}>\r\n      <div className=\"two fields\">\r\n        <div className=\"field\">\r\n          <label>Date</label>\r\n          <input type=\"date\" value={endDate}\r\n            max={maxDate}\r\n            min={\"2015-02-01\"}\r\n            onChange={(e) => { handleChange(e) }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button className=\"ui primary button marginBottom\">\r\n        Get spaceweather news\r\n      </button>\r\n    </form>\r\n  )\r\n}","import React, { ReactElement } from \"react\";\r\nimport { DonkiType } from \"../../../types/types\";\r\n\r\ninterface Props {\r\n  news: DonkiType;\r\n}\r\n\r\nexport default function DonkiItem({ news }: Props): ReactElement {\r\n  const message = news.messageBody.split(\"Disclaimer:\");\r\n  const header = message[0].split(\"##\")[1];\r\n  const type = message[0].split(\"Message Type:\")[1].split(\"##\")[0];\r\n  const summary = message[1].split(\"Summary:\")[1].split(\"##\")[0];\r\n\r\n  return (\r\n    <div className=\"item\">\r\n      <div className=\"ui message content\">\r\n        <div className=\"header\">\r\n          <h2>{header}</h2>\r\n        </div>\r\n        <div className=\"meta\">\r\n          <p>{type}</p>\r\n          <div>ID: {news.messageID}</div>\r\n          <div>Type: {news.messageType}</div>\r\n          <div>Time: {news.messageIssueTime}</div>\r\n          <br />\r\n        </div>\r\n        <div className=\"description\">\r\n          <p>{summary}</p>\r\n          <br />\r\n        </div>\r\n        <div className=\"extra\">\r\n          <p>\r\n            Link: <a href={news.messageURL}>{news.messageURL}</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { ReactElement } from \"react\";\r\nimport { DonkiType } from \"../../types/types\";\r\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\r\nimport DonkiForm from \"./donki-form/donki-form\";\r\nimport DonkiItem from \"./donki-item/donki-item\";\r\n\r\ninterface Props {\r\n  donki: DonkiType[];\r\n  startDate: string;\r\n  endDate: string;\r\n  maxDate: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n}\r\n\r\nexport default function Donki({ donki, startDate, endDate, maxDate, handleChange, handleSubmit }: Props): ReactElement {\r\n  return (\r\n    <div className=\"ui middle aligned list\">\r\n      <DonkiForm startDate={startDate} endDate={endDate} maxDate={maxDate}\r\n        handleChange={handleChange} handleSubmit={handleSubmit}\r\n      />\r\n      {donki.length ? donki.map((news: DonkiType) => (\r\n        <DonkiItem key={news.messageID} news={news} />)) : <LoadingSpinner />}\r\n    </div>\r\n  );\r\n}","import React, { ReactElement } from \"react\";\r\nimport { Techport } from \"../../types/types\";\r\n\r\ninterface Props {\r\n  children?: ReactElement;\r\n  value: string;\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport default function Searchbar({ children, value, handleChange }: Props): ReactElement {\r\n  return (\r\n    <div className=\"ui category search\">\r\n      <div className=\"ui icon input\">\r\n        <input className=\"prompt\" type=\"text\" placeholder={value}\r\n          onChange={(e) => { handleChange(e) }} />\r\n        <i className=\"search icon\"></i>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { ReactElement, useEffect } from \"react\";\r\nimport { EpicAllType, EpicType } from \"../../types/types\";\r\nimport Searchbar from \"../searchbar/search-bar\";\r\n\r\ninterface Props {\r\n  currentEpic: EpicType[];\r\n  index: number;\r\n  message: string;\r\n  handlePrevClick: () => void;\r\n  handleNextClick: () => void;\r\n  results: EpicAllType[];\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  display: () => string;\r\n  handleClickResult: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n}\r\n\r\nexport default function Epic({ currentEpic, index, message, handlePrevClick, handleNextClick,\r\n  results, handleChange, display, handleClickResult }: Props): ReactElement {\r\n\r\n  const element = currentEpic[index];\r\n  const date = element.date.split(\" \");\r\n  const dateArr = date[0].split(\"-\");\r\n  const year = dateArr[0];\r\n  const month = dateArr[1];\r\n  const day = dateArr[2];\r\n  useEffect(() => {\r\n    const images: any[] = [];\r\n    function preload() {\r\n      for (let i = 1; i < currentEpic.length; i++) {\r\n        const element = currentEpic[i];\r\n        const date = element.date.split(\" \");\r\n        const dateArr = date[0].split(\"-\");\r\n        const year = dateArr[0];\r\n        const month = dateArr[1];\r\n        const day = dateArr[2];\r\n        images[i] = new Image();\r\n        images[i].src = `https://epic.gsfc.nasa.gov/archive/natural/${year}/${month}/${day}/png/${element.image}.png`;\r\n      }\r\n    }\r\n    preload();\r\n  }, [currentEpic])\r\n\r\n  // console.log(currentEpic)\r\n  // currentEpic wird nach Auswahl manchmal nicht aktualisiert\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"relative varWidth marginBottom\">\r\n        {/* Searchbar einfügen und darüber die Results bestimmen */}\r\n        <Searchbar value={`${year}-${month}-${day}`} handleChange={handleChange} />\r\n        <div className=\"searchResults epicResults\" style={{ display: `${display()}` }}>\r\n          {results.length ? results.map((result: any, index: number) => (\r\n            <div key={index} className=\"resultItem\"\r\n              onClick={(e) => { handleClickResult(e) }}>{result.date}</div>\r\n          )\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <div className=\"relative\">\r\n        <div className=\"opacity1 positionStart\"\r\n          onClick={handlePrevClick}\r\n        > </div>\r\n        <div className=\"opacity1 positionEnd\"\r\n          onClick={handleNextClick}\r\n        > </div>\r\n\r\n        <div>\r\n          <img src={`https://epic.gsfc.nasa.gov/archive/natural/${year}/${month}/${day}/png/${element.image}.png`}\r\n            style={{ width: \"100%\" }} />\r\n        </div>\r\n\r\n        <div className=\"ui segment list varWidth\">\r\n          <div className=\"item\">\r\n            <h3 className=\"header\">{message}</h3>\r\n            <span>{element.date}</span>\r\n          </div>\r\n          <div className=\"item\">\r\n            <h4 className=\"header\">Attitude quaternions: </h4>\r\n            <span className=\"blockSpan\">Q0: {element.coords.attitude_quaternions.q0}</span>\r\n            <span className=\"blockSpan\">Q1: {element.coords.attitude_quaternions.q1}</span>\r\n            <span className=\"blockSpan\">Q2: {element.coords.attitude_quaternions.q2}</span>\r\n            <span className=\"blockSpan\">Q3: {element.coords.attitude_quaternions.q3}</span>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <h4 className=\"header\">Centroid coordinates: </h4>\r\n            <span className=\"blockSpan\">latitude: {element.coords.centroid_coordinates.lat}</span>\r\n            <span className=\"blockSpan\">longitude: {element.coords.centroid_coordinates.lon}</span>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <h4 className=\"header\">Discover position: </h4>\r\n            <span className=\"blockSpan\">x: {element.coords.dscovr_j2000_position.x}</span>\r\n            <span className=\"blockSpan\">y: {element.coords.dscovr_j2000_position.y}</span>\r\n            <span className=\"blockSpan\">z: {element.coords.dscovr_j2000_position.z}</span>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <h4 className=\"header\">Lunar position: </h4>\r\n            <span className=\"blockSpan\">x: {element.coords.lunar_j2000_position.x}</span>\r\n            <span className=\"blockSpan\">y: {element.coords.lunar_j2000_position.y}</span>\r\n            <span className=\"blockSpan\">z: {element.coords.lunar_j2000_position.z}</span>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <h4 className=\"header\">Sun position: </h4>\r\n            <span className=\"blockSpan\">x: {element.coords.sun_j2000_position.x}</span>\r\n            <span className=\"blockSpan\">y: {element.coords.sun_j2000_position.y}</span>\r\n            <span className=\"blockSpan\">z: {element.coords.sun_j2000_position.z}</span>\r\n            <br />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div >\r\n  );\r\n}","import React, { ReactElement } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHome } from \"../../hooks/use-home\";\r\nimport { Techport } from \"../../types/types\";\r\nimport Searchbar from \"../searchbar/search-bar\";\r\n\r\ninterface Props {\r\n  techport: Techport;\r\n}\r\n\r\nexport default function Home({ techport }: Props): ReactElement {\r\n  const [results, handleChange, display] = useHome(techport);\r\n\r\n  return (\r\n    <div className=\"ui center aligned header segment\">\r\n      <h1 > Welcome to my Project (using NASA-API) </h1>\r\n      <div>\r\n        <h2 > Searching for NASA projects? </h2>\r\n        <p> Just type in a projectnumber (results are limited to 100) </p>\r\n        <Searchbar value=\"Search projectnumber...\" handleChange={handleChange}>\r\n          <div></div>\r\n        </Searchbar>\r\n      </div>\r\n      <div className=\"searchResults\" style={{ display: `${display()}` }}>\r\n        {results && results.filter((el, index) => index < 100).map((result, index) => (\r\n          <Link to={`/techport/${result.id}`} className=\"resultItem\"\r\n            key={index}\r\n          >\r\n            {result.id}\r\n          </Link>\r\n        )\r\n        )}\r\n      </div>\r\n    </div >\r\n  );\r\n}","import { useState } from \"react\";\r\nimport debounce from \"../tools/debounce\";\r\nimport { Project, Techport } from \"../types/types\";\r\n\r\nexport function useHome(techport: Techport): [\r\n  results: Project[] | undefined,\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n  display: () => string,\r\n] {\r\n  const [results, setResults] = useState<Project[] | undefined>();\r\n  const projects = techport.projects.projects || [];\r\n\r\n  const handleChange = debounce((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const searchValue = e.target.value.trim()\r\n    if (searchValue != \"\") {\r\n      const existingProjects = projects.filter(project => String(project.id).indexOf(searchValue) == 0);\r\n      setResults(state => existingProjects)\r\n    } else {\r\n      setResults(state => undefined);\r\n    }\r\n  }, 300)\r\n\r\n  const display = (): string => {\r\n    if (results) return \"block\";\r\n    return \"none\";\r\n  }\r\n\r\n  return [\r\n    results,\r\n    handleChange,\r\n    display,\r\n  ];\r\n}","import React, { ReactElement, useState } from \"react\";\r\nimport LoadingSpinner from \"../../loading-spinner/loading-spinner\";\r\n\r\ninterface Props {\r\n  handleClick: () => void;\r\n  handleInput: (e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>, field: string) => void;\r\n  setMessage: React.Dispatch<React.SetStateAction<JSX.Element>>;\r\n}\r\n\r\nexport default function RoverForm({ handleClick, handleInput, setMessage }: Props): ReactElement {\r\n  return (\r\n    <div className=\"ui form\">\r\n      <div className=\"two fields\">\r\n        <div className=\"field\">\r\n          <label>Rover </label>\r\n          <select name=\"rovers\" placeholder=\"curiosity\" onChange={(e) => { handleInput(e, \"rovers\") }}>\r\n            <option value=\"curiosity\">Curiosity</option>\r\n            <option value=\"opportunity\">Opportunity\t</option>\r\n            <option value=\"spirit\">Spirit</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Sol </label>\r\n          <input name=\"sol\" type=\"number\" min=\"0\" max=\"1000\" step=\"1\" placeholder=\"0\"\r\n            onChange={(e) => { handleInput(e, \"sol\") }} />\r\n        </div>\r\n      </div>\r\n      <button className=\"ui primary button marginBottom\"\r\n        onClick={() => {\r\n          handleClick();\r\n          setMessage(<LoadingSpinner />);\r\n          setTimeout(() => {\r\n            setMessage(<p className=\"ui segment\">No pictures found for this day</p>);\r\n          }, 5000);\r\n        }}\r\n      > Search Photos </button>\r\n    </div>\r\n  );\r\n}","import React, { ReactElement } from \"react\";\r\nimport { Fotos } from \"../../../types/types\";\r\n\r\ninterface Props {\r\n  foto: Fotos;\r\n}\r\n\r\nexport default function RoverItem({ foto }: Props): ReactElement {\r\n  return (\r\n    <div className=\"column\">\r\n      <div className=\"ui fluid card\">\r\n        <div className=\"image backgroundImageCard\" style={{\r\n          backgroundImage: `url(${foto.img_src})`\r\n        }}>\r\n        </div>\r\n\r\n        <div className=\"content\">\r\n          <div className=\"meta\">\r\n            <span className=\"date\">\r\n              Date: {foto.earth_date}\r\n            </span>\r\n          </div>\r\n          <div className=\"description\">\r\n            <div>\r\n              <h3>{foto.rover.name}</h3>\r\n              <p>Camera: {foto.camera.full_name}</p>\r\n              <p>Landing: {foto.rover.landing_date}</p>\r\n              <p>Launch: {foto.rover.launch_date}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { ReactElement, useState } from \"react\";\r\nimport { Fotos } from \"../../types/types\";\r\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\r\nimport RoverForm from \"./rover-form/rover-form\";\r\nimport RoverItem from \"./rover-item/rover-item\";\r\n\r\ninterface Props {\r\n  roverData: any[];\r\n  isClicked: boolean;\r\n  handleInput: (e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>, field: string) => void;\r\n  handleClick: () => void;\r\n  handleScroll: () => void\r\n}\r\n\r\nexport default function Rover({ roverData, isClicked, handleInput, handleClick, handleScroll }: Props): ReactElement {\r\n  const [message, setMessage] = useState(<LoadingSpinner />);\r\n\r\n  window.onscroll = handleScroll;\r\n\r\n  return (\r\n    <div>\r\n      <RoverForm handleClick={handleClick} handleInput={handleInput} setMessage={setMessage} />\r\n\r\n      {\r\n        isClicked ?\r\n          roverData.length > 0 ?\r\n            <div className=\"ui three column grid\">{\r\n              roverData.map((foto: Fotos) => (\r\n                <RoverItem key={foto.id} foto={foto} />\r\n              ))}</div>\r\n            : <div>\r\n              {message}\r\n            </div>\r\n          : null\r\n      }\r\n    </div>\r\n  );\r\n}","import React, { ReactElement } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTechPort } from \"../../hooks/use-techport\";\r\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\r\n\r\nexport default function Techport(): ReactElement {\r\n  const { projectId } = useParams<{ projectId: string }>();\r\n  const [techportResult] = useTechPort(projectId);\r\n  const regEx = new RegExp(\"<[^<]*>\");\r\n  // console.log(techportResult)\r\n\r\n  return (\r\n    <div>\r\n      {techportResult ?\r\n        <div className=\"ui segment content\">\r\n          <h2 className=\"header\">{techportResult.project.title && techportResult.project.title}</h2>\r\n          <div className=\"description\">\r\n            <p>{techportResult.project.description && techportResult.project.description.split(regEx).join(\" \")}</p>\r\n            {techportResult.project.website &&\r\n              <div>\r\n                <span>Link: </span>\r\n                <a href={techportResult.project.website}>{techportResult.project.website}</a>\r\n              </div>\r\n            }\r\n          </div>\r\n        </div> :\r\n        <LoadingSpinner />}\r\n    </div>\r\n  );\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchPost } from \"../tools/tools\";\r\n\r\nexport function useTechPort(id: string): [\r\n  techportResult: any\r\n] {\r\n  const [techportResult, setTechportResult] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    const getTechportResult = () => {\r\n      const data = {\r\n        id\r\n      };\r\n      fetchPost(\"/techport\", data).then(resData => {\r\n        setTechportResult(resData);\r\n      }).catch(error => console.log(error));\r\n    }\r\n\r\n    getTechportResult();\r\n  }, [id])\r\n\r\n\r\n  return [\r\n    techportResult,\r\n  ];\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { ReactElement } from \"react\";\r\n\r\ninterface Props {\r\n  element: any;\r\n}\r\n\r\nexport default function TechtransferItem({ element }: Props): ReactElement {\r\n  const regEx = new RegExp(\"<[^<]*>\");\r\n  const header = element[2].split(regEx).join(\" \");\r\n  const body = element[3].split(regEx).join(\" \");\r\n  // console.log(header);\r\n  return (\r\n    <div className=\"item\">\r\n      <div className=\"image\">\r\n        <img src={element[10]} style={{ width: \"100%\" }} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className=\"header\">\r\n          <h4>{header}</h4>\r\n        </div>\r\n        <div className=\"description\">\r\n          <p>{body}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport React, { ReactElement } from \"react\";\r\nimport Searchbar from \"../searchbar/search-bar\";\r\nimport TechtransferItem from \"./techtransfer-item/techtransfer-item\";\r\n\r\ninterface Props {\r\n  results: string[];\r\n  handleScroll: () => void;\r\n  handleChange: (...args: any[]) => void;\r\n  error: string;\r\n}\r\n\r\nexport default function Techtransfer({ results, handleScroll, handleChange, error }: Props): ReactElement {\r\n\r\n  window.onscroll = handleScroll;\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar value=\"Search patents...\" handleChange={handleChange}>\r\n        <div></div>\r\n      </Searchbar>\r\n      <div className=\"ui middle divided aligned items\">\r\n        {\r\n          (results && results.length) > 0 ? results.map((element: any) => (\r\n            <TechtransferItem key={element[0]} element={element} />\r\n          ))\r\n            : <div>{error}</div>\r\n        }\r\n      </div >\r\n    </div >\r\n  );\r\n}","import React, { ReactElement } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { useDonki } from \"../../hooks/use-donki\";\r\nimport useEpic from \"../../hooks/use-epic\";\r\nimport { useGetData } from \"../../hooks/use-get-data\";\r\nimport useLimits from \"../../hooks/use-limits\";\r\nimport { useRover } from \"../../hooks/use-rover\";\r\nimport { useTechTransfer } from \"../../hooks/use-techtransfer\";\r\nimport Apod from \"../apod/apod\";\r\nimport Donki from \"../donki/donki\";\r\nimport Epic from \"../epic/epic\";\r\nimport Home from \"../home/home\";\r\nimport LoadingSpinner from \"../loading-spinner/loading-spinner\";\r\nimport Rover from \"../rover/rover\";\r\nimport Techport from \"../techport/techport\";\r\nimport Techtransfer from \"../techtransfer/techtransfer\";\r\n\r\n\r\nexport default function Routing(): ReactElement {\r\n  const { apod, epic, epicAll, techport } = useGetData();\r\n  const [techtransfer, handleChangeTechtransfer, error] = useTechTransfer();\r\n  const [roverData, isClickedRover, handleInputRover, handleClickRover] = useRover();\r\n  const [donki, startDate, endDate, maxDate, handleChangeDonki, handleSubmitDonki, useInitialDonki] = useDonki();\r\n  useInitialDonki();\r\n  const [currentEpic, indexEpic, messageEpic, handlePrevClickEpic, handleNextClickEpic,\r\n    resultsEpic, handleChangeEpic, displayEpic, handleClickResultEpic] = useEpic(epic, epicAll);\r\n\r\n  //Limited states -> loading on scroll\r\n  const [limitedApod, handleScrollApod] = useLimits(apod, 350);\r\n  const [limitedTechTransfer, handleScrollTechtransfer] = useLimits(techtransfer, 350)\r\n  const [limitedTechRoverData, handleScrollRover] = useLimits(roverData.photos, 350)\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/techtransfer'>\r\n        <Techtransfer results={limitedTechTransfer} handleScroll={handleScrollTechtransfer}\r\n          handleChange={handleChangeTechtransfer} error={error} />\r\n      </Route>\r\n\r\n      <Route path='/techport/:projectId'>\r\n        <Techport />\r\n      </Route>\r\n\r\n      <Route path='/rover'>\r\n        <Rover roverData={limitedTechRoverData} isClicked={isClickedRover}\r\n          handleInput={handleInputRover} handleClick={handleClickRover}\r\n          handleScroll={handleScrollRover} />\r\n      </Route>\r\n\r\n      <Route path='/epic'>\r\n        {epic && epicAll ? <Epic currentEpic={currentEpic} index={indexEpic} message={messageEpic}\r\n          handlePrevClick={handlePrevClickEpic} handleNextClick={handleNextClickEpic}\r\n          results={resultsEpic} handleChange={handleChangeEpic} display={displayEpic}\r\n          handleClickResult={handleClickResultEpic} /> : <LoadingSpinner />}\r\n      </Route>\r\n\r\n      <Route path='/donki'>\r\n        {donki ? <Donki\r\n          donki={donki}\r\n          startDate={startDate}\r\n          endDate={endDate}\r\n          maxDate={maxDate}\r\n          handleChange={handleChangeDonki}\r\n          handleSubmit={handleSubmitDonki}\r\n        /> : <LoadingSpinner />}\r\n      </Route>\r\n\r\n      <Route path='/apod'>\r\n        {apod ? <Apod apod={limitedApod} handleScroll={handleScrollApod} /> : <LoadingSpinner />}\r\n      </Route>\r\n\r\n      <Route path='/home'>\r\n        {techport && <Home techport={techport} />}\r\n      </Route>\r\n\r\n      <Route path=''>\r\n        <Redirect to=\"/home\" />\r\n      </Route>\r\n    </Switch >\r\n  );\r\n}","/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/* eslint-disable indent */\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { ApodType, EpicType, Techport } from \"../types/types\";\r\n\r\nexport function useGetData(): {\r\n  apod: ApodType[] | undefined;\r\n  epic: EpicType[] | undefined;\r\n  epicAll: any;\r\n  techport: Techport | undefined;\r\n} {\r\n  const [apod, setApod] = useState();\r\n  const [epic, setEpic] = useState();\r\n  const [epicAll, setEpicAll] = useState();\r\n  const [techport, setTechport] = useState();\r\n\r\n  const setState = useCallback((apiNames: string[], name: string, data: any) => {\r\n\r\n    switch (name) {\r\n      case apiNames[0]:\r\n        setApod(state => data);\r\n        break;\r\n      case apiNames[1]:\r\n        setEpic(state => data);\r\n        break;\r\n      case apiNames[2]:\r\n        setEpicAll(state => data);\r\n        break;\r\n      case apiNames[3]:\r\n        setTechport(state => data);\r\n        break;\r\n    }\r\n  }, []);\r\n\r\n  const getState = () => {\r\n    return {\r\n      apod, epic, epicAll, techport\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getInitialData = () => {\r\n      // console.log(\"get Data\")\r\n      const apiNames: string[] = [\"apod\", \"epic\", \"epicAll\", \"techport\"];\r\n      apiNames.forEach((name: string) => {\r\n        fetch(`https://nasa-agzu.herokuapp.com/${name}`)\r\n          .then(response => response.json())\r\n          .then(\r\n            res => {\r\n              setState(apiNames, name, res);\r\n            }\r\n          );\r\n      });\r\n    }\r\n\r\n    getInitialData();\r\n\r\n    return () => {\r\n      // Do some cleanup   \r\n    }\r\n  }, [setState]);\r\n\r\n  return getState();\r\n}\r\n\r\n\r\n\r\n\r\n","/* eslint-disable indent */\r\nimport { useState } from \"react\";\r\nimport debounce from \"../tools/debounce\";\r\nimport { fetchPost } from \"../tools/tools\";\r\n\r\nexport function useTechTransfer(): [\r\n  techtransfer: string[],\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  handleChangeTechtransfer: (...args: any[]) => void,\r\n  error: string\r\n] {\r\n  const [techtransfer, setTechtransfer] = useState<string[]>([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChangeTechtransfer = debounce((e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const searchValue = e.target.value.trim()\r\n    if (searchValue !== \"\") {\r\n      const data = {\r\n        searchfield: searchValue\r\n      };\r\n\r\n      fetchPost(\"/techtransfer\", data).then(resData => {\r\n        setTechtransfer(state => resData.results);\r\n        if (resData.message) setError(state => \"This service is currently not available, please try it again later!\")\r\n        else if (resData.results.length == 0) setError(state => \"No patent found. Keep on digging!\")\r\n        else setError(state => \"\")\r\n      }).catch(error => console.log(error));\r\n    }\r\n  }, 500)\r\n\r\n  return [\r\n    techtransfer,\r\n    handleChangeTechtransfer,\r\n    error\r\n  ];\r\n}","/* eslint-disable indent */\r\nimport React, { useState } from \"react\";\r\nimport debounce from \"../tools/debounce\";\r\nimport { fetchPost } from \"../tools/tools\";\r\n\r\nexport function useRover(): [\r\n  roverData: {\r\n    photos: never[];\r\n  },\r\n  isClicked: boolean,\r\n  handleInput: (e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>, field: string) => void,\r\n  handleClick: () => void\r\n] {\r\n  const [roverData, setRoverData] = useState({ photos: [] });\r\n  const [sol, setSol] = useState(0);\r\n  const [name, setName] = useState(\"curiosity\");\r\n  const [isClicked, setIsClicked] = useState(false);\r\n\r\n  const handleInput = debounce((e: React.ChangeEvent<HTMLSelectElement | HTMLInputElement>, field: string): void => {\r\n    if (Number(e.target.value) > 1000) {\r\n      e.target.value = \"1000\"\r\n    }\r\n    if (Number(e.target.value) < 0 || e.target.value == \"\" || e.target.value.includes(\",\") || e.target.value.includes(\".\")) {\r\n      e.target.value = \"0\"\r\n    }\r\n\r\n    switch (field) {\r\n      case \"sol\":\r\n        setSol(state => Number(e.target.value));\r\n        break;\r\n      case \"rovers\":\r\n        setName(state => e.target.value);\r\n        break;\r\n    }\r\n  }, 300)\r\n\r\n  const handleClick = debounce((): void => {\r\n    setIsClicked(state => true);\r\n    const data = {\r\n      sol, name\r\n    };\r\n    fetchPost(\"/rover\", data).then(resData => { setRoverData(state => resData) }).catch(error => console.log(error));\r\n  }, 300)\r\n\r\n  return [\r\n    roverData,\r\n    isClicked,\r\n    handleInput,\r\n    handleClick\r\n  ];\r\n}","/* eslint-disable indent */\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchPost, getInitialInterval } from \"../tools/tools\";\r\nimport { DonkiType } from \"../types/types\";\r\n\r\nexport function useDonki(): [\r\n  donki: DonkiType[] | undefined,\r\n  startDate: string,\r\n  endDate: string,\r\n  maxDate: string,\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void,\r\n  useInitialDonki: () => void\r\n] {\r\n  const [donki, setDonki] = useState();\r\n  const [startDate, setStartDate] = useState(getInitialInterval()[1]);\r\n  const maxDate = getInitialInterval()[0];\r\n  const [endDate, setEndDate] = useState(maxDate);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    // console.log(wichDate);\r\n    let newDate = e.target.value;\r\n    const maxDateArr = maxDate.split(\"-\").map(el => Number(el));\r\n    const newDateArr = newDate.split(\"-\").map(el => Number(el));\r\n    const startingPoint = newDate.split(\"-\");\r\n    const startingPointNr = newDate.split(\"-\").map(el => Number(el));\r\n    startingPoint[2] = \"01\";\r\n    if (startingPointNr[1] - 1 < 1) {\r\n      startingPoint[1] = \"12\";\r\n      startingPoint[0] = `${startingPointNr[0] - 1}`;\r\n    }\r\n    else\r\n      startingPoint[1] = `${startingPointNr[1] - 1}`;\r\n\r\n    if ((newDateArr[0] > maxDateArr[0]) ||\r\n      (newDateArr[0] == maxDateArr[1] && newDateArr[0] > maxDateArr[1]) ||\r\n      (newDateArr[0] == maxDateArr[1] && newDateArr[0] == maxDateArr[1] && newDateArr[2] > maxDateArr[2]))\r\n      newDate = maxDate\r\n\r\n    setEndDate(state => newDate);\r\n    setStartDate(state => startingPoint.join(\"-\"));\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    const data = {\r\n      startDate, endDate\r\n    };\r\n    // console.log(data);\r\n    fetchPost(\"/donki\", data).then(resData => { setDonki(state => resData) }).catch(error => console.log(error));\r\n\r\n    const startDateArr = startDate.split(\"-\").map(el => Number(el));\r\n    const endDateArr = endDate.split(\"-\").map(el => Number(el));\r\n    if ((startDateArr[0] > endDateArr[0]) ||\r\n      (startDateArr[0] == endDateArr[0] && startDateArr[1] > endDateArr[1]) ||\r\n      (startDateArr[0] == endDateArr[0] && startDateArr[1] == endDateArr[1] && startDateArr[2] > endDateArr[2])) {\r\n      const tempDate = startDate;\r\n      setStartDate(state => endDate);\r\n      setEndDate(state => tempDate);\r\n    }\r\n  }\r\n\r\n  const useInitialDonki = (): void => {\r\n    useEffect(() => {\r\n      const getInitialDonki = () => {\r\n        const data = {\r\n          startDate, endDate\r\n        };\r\n        fetchPost(\"/donki\", data).then(resData => { setDonki(state => resData) }).catch(error => console.log(error));\r\n      }\r\n\r\n      getInitialDonki();\r\n    }, []);\r\n  }\r\n\r\n  return [\r\n    donki,\r\n    startDate,\r\n    endDate,\r\n    maxDate,\r\n    handleChange,\r\n    handleSubmit,\r\n    useInitialDonki\r\n  ]\r\n}","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { useEffect, useState } from \"react\";\r\nimport debounce from \"../tools/debounce\";\r\nimport { fetchPost } from \"../tools/tools\";\r\nimport { EpicAllType, EpicType } from \"../types/types\";\r\n\r\nexport default function useEpic(epic: EpicType[] | undefined, epicAll: EpicAllType[]): [\r\n  currentEpic: EpicType[],\r\n  index: number,\r\n  message: string,\r\n  handlePrevClick: () => void,\r\n  handleNextClick: () => void,\r\n  results: EpicAllType[],\r\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n  display: () => string,\r\n  handleClickResult: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\r\n] {\r\n  const [index, setIndex] = useState(0);\r\n  const [message, setMessage] = useState(\"Erstes Bild\");\r\n  const [results, setResults] = useState<EpicAllType[]>([]);\r\n  const [currentEpic, setCurrentEpic] = useState<EpicType[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (epic) setCurrentEpic(epic)\r\n  }, [epic])\r\n\r\n  useEffect(\r\n    () => {\r\n      setMessage(state => `Bild ${index + 1}`);\r\n    }, [index]\r\n  )\r\n\r\n  const handlePrevClick = debounce((): void => {\r\n    if (index > 0) {\r\n      setIndex(state => state - 1);\r\n    }\r\n  }, 150)\r\n\r\n  const handleNextClick = debounce((): void => {\r\n    if (index < currentEpic.length - 1) {\r\n      setIndex(state => state + 1);\r\n    }\r\n  }, 150)\r\n\r\n  const handleClickResult = (e: React.MouseEvent<HTMLDivElement, MouseEvent>): void => {\r\n    setResults(state => []);\r\n    const data = {\r\n      date: e.currentTarget.textContent\r\n    };\r\n    fetchPost(\"/epic\", data).then((resData) => {\r\n      setIndex(state => 0);\r\n      return resData;\r\n    }).then(resData => {\r\n      if (resData) {\r\n        setCurrentEpic(state => resData);\r\n      }\r\n    }).catch(error => console.log(error));\r\n  }\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const input = e.target.value.trim();\r\n    if (input != \"\")\r\n      setResults(state => epicAll.filter((el: EpicAllType, i: number) => el.date.indexOf(input) == 0));\r\n    else setResults(state => [])\r\n  }\r\n\r\n  const display = (): string => {\r\n    if (results.length) return \"block\";\r\n    return \"none\";\r\n  }\r\n\r\n  return [\r\n    currentEpic,\r\n    index,\r\n    message,\r\n    handlePrevClick,\r\n    handleNextClick,\r\n    results,\r\n    handleChange,\r\n    display,\r\n    handleClickResult\r\n  ]\r\n}","import React, { ReactElement, useEffect } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\nimport Layout from './components/layout/layout';\r\nimport Routing from './components/routing/routing';\r\n\r\nfunction App(): ReactElement {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Layout>\r\n          <Routing />\r\n        </Layout>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}